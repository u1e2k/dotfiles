name: Dotfiles Installation Test # ワークフローの名前

on:
  push:
    branches:
      - main # main ブランチへのプッシュ時に実行
      - master # master ブランチを使っている場合
  pull_request:
    branches:
      - main # main ブランチへのプルリクエスト時に実行
      - master # master ブランチを使っている場合

jobs:
  test_install:
    runs-on: ubuntu-latest # テストを実行するOS (Ubuntu 最新版)

    steps:
      - name: Checkout dotfiles repository
        uses: actions/checkout@v4 # リポジトリをチェックアウト

      - name: Make install script executable # スクリプトに実行権限を付与
        run: chmod +x install.sh

      - name: Run dotfiles installation script # インストールスクリプトを実行
        run: ./install.sh

      # オプション: インストール後の簡単な検証ステップ
      # 例えば、.bashrc がシンボリックリンクとして存在するかを確認
      - name: Verify .bashrc symlink
        run: |
          if [ ! -L "$HOME/.bashrc" ]; then
            echo "Error: ~/.bashrc is not a symbolic link!"
            exit 1
          fi
          # readlink -f は macOS と Linux で挙動が異なる場合があるため、注意が必要です。
          # macOS では GNU coreutils の greadlink が必要になることもあります。
          # GitHub Actions の ubuntu-latest は GNU coreutils が入っています。
          if [ "$(readlink -f "$HOME/.bashrc")" != "$(readlink -f "${{ github.workspace }}/.bashrc")" ]; then
            echo "Error: ~/.bashrc does not point to the correct source!"
            exit 1
          fi
          echo ".bashrc symlink verified successfully."

      # オプション: .bashrc の内容が適切に読み込まれるかテストする（例: エイリアスが定義されているか）
      # ただし、これにはシェルを再起動したり、特定のエイリアスを定義するスクリプトが .bashrc に記述されている必要があります
      # 例えば、.bashrcに `alias mytestalias='echo "Hello from dotfiles!"'` があれば
      # - name: Test bashrc alias
      #   run: |
      #     source ~/.bashrc # 新しいシェルセッションで .bashrc を読み込み
      #     mytestalias | grep "Hello from dotfiles!"
      #   shell: bash -l {0} # ログインシェルとしてbashを起動し、.bashrcが確実に読み込まれるようにする